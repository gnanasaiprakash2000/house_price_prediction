# Bengaluru Home Price Prediction

An end-to-end machine learning project to predict house prices in Bengaluru, India, using regression models.  
This notebook demonstrates the full workflow from **data cleaning → feature engineering → modelling → export**.

---

## Overview

This project takes a real estate dataset from Bengaluru and performs the following:

- Cleans and preprocesses the data  
- Removes outliers and inconsistent records  
- Performs feature engineering  
- Builds and evaluates regression models  
- Exports the model so it can be used in deployment (e.g., web app)

The goal is to predict property prices based on features such as **location**, **square footage**, **number of bedrooms (BHK)**, and **bathrooms**.

---

## Dataset Description

Each row in the dataset represents a house listing with the following columns:

| Column       | Description                                   |
|--------------|-----------------------------------------------|
| `area_type`  | Type of area (Super built-up, Plot, etc.)     |
| `availability`| Availability status                           |
| `location`   | Locality in Bengaluru                          |
| `size`       | Number of bedrooms (e.g., “2 BHK”)             |
| `society`    | Society name                                   |
| `total_sqft` | Total area in square feet                      |
| `bath`       | Number of bathrooms                            |
| `balcony`    | Number of balconies                            |
| `price`      | Price in lakhs                                 |

---

## ⚙️ Steps Performed

### 1. Data Cleaning  
- Dropped columns that are less useful (`area_type`, `society`, `availability`, `balcony`)  
- Handled missing values (dropped or filled)  
- Converted the `size` column to a numeric value for BHK count  
- Cleaned the `total_sqft` column (for example converting strings like “2100-2850” to a numeric average)  

### 2. Feature Engineering  
- Created a new feature `price_per_sqft` = (price * 100000) / total_sqft  
- Reduced high-cardinality locations into an “other” category (for locations that appear very few times)  
- Removed entries which are unrealistic (for example: very low area per BHK)  
- Removed inconsistent data (e.g., 2 BHK costing more than 3 BHK in same locality)  

### 3. Model Building  
- Defined features (X) and target (y = price)  
- Split data into train/test sets  
- Trained a regression model (e.g., Linear Regression)  
- Evaluated performance (R² score, etc.)  
- Optionally compared with other regressors (Lasso, Decision Tree, etc.) using cross-validation  

### 4. Model Export  
- Saved the trained model using `pickle` or similar  
- Saved metadata such as columns list and location names to a JSON file  
- Created a helper function (inside the code) such as:  
  ```python
  def predict_home_price(location, sqft, bath, bhk):
      # returns estimated price for the given parameters
